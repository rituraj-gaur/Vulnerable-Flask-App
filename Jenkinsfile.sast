pipeline {
  agent any
  environment{
    //For demo jenkins
    	git_cred = credentials('jenkins-pat')
  }

  stages {
    stage('meta-data') {
      steps {
        echo "BUILD NUMBER: $BUILD_NUMBER"
        echo "Current workspace: $WORKSPACE"
        echo "Project value received: $PROJECT_NAME "
      }
    }
    stage('Checkmarx SAST') {
        steps{
            step([$class: 'CxScanBuilder', addGlobalCommenToBuildCommet: true, avoidDuplicateProjectScans: true, comment: '', configAsCode: true, credentialsId: 'dell-cx', excludeFolders: '', exclusionsSetting: '', failBuildOnNewResults: false, failBuildOnNewSeverity: 'HIGH', filterPattern: '', fullScanCycle: 10, generatePdfReport: true, password: '{AQAAABAAAAAQ7pgOZ/zzWYWkB0TLRuHvttT+Nj/qJkF62hJUn+fZJiM=}', projectName: ${env.PROJECT_NAME}, sastEnabled: true, serverUrl: 'https://cx.dell.com', sourceEncoding: 'Provide Checkmarx server credentials to see source encodings list', teamPath: ${TEAM_NAME} , useOwnServerCredentials: true, username: '', vulnerabilityThresholdResult: 'FAILURE', waitForResultsEnabled: true])
        }
    }

   //Orignal End
  }
}
//stage('Open Source Compliance') {
//          steps {
//            blackduck([appName: "${APP_NAME}", appDomain: "${APP_DOMAIN}", branchName:
//            "master"])
//          }
//        }

